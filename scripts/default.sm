default_val = {
               'threads': 1,
               'gzipped': 0,
               'keepfiles': 0,		   
			   'tools': {"clark": "b", "dudes": "p", "gottcha": "p", "kaiju": "b", "kraken": "b", "motus": "p", "metaphlan2": "p"},
			   'tool_alt_path': {"clark": "", "dudes": "", "gottcha": "", "kaiju": "", "kraken": "", "motus": "", "trimmomatic": "", "spades": "", "bowtie2": "", "krona": "", "metametamerge": "", "metaphlan2": ""},
			   'trimming': 0,
			   'desiredminlen': 70,
			   'strictness': 0.8,
			   'errorcorr': 0,
			   'subsample': 0,
			   'samplesize': 1,
			   'replacement': 0,
			   'mode': 'linear',
			   'cutoff': 0.0001,
			   'bins': 4,
			   'ranks': 'species',
			   'detailed': 0,
			   'verbose': 0,
			   'databases': ['archaea_bacteria_201503'],
			   }	

preconfigdbs = {'archaea_bacteria_201503': {
					"clark": "https://zenodo.org/record/820055/files/clark_bac_arc_v1.tar.gz", 
					"dudes": "https://zenodo.org/record/820053/files/dudes_bac_arc_v1.tar.gz", 
					"gottcha": "https://zenodo.org/record/819341/files/gottcha_bac_arc_v1.tar.gz", 
					"kaiju": "https://zenodo.org/record/819425/files/kaiju_bac_arc_v1.tar.gz", 
					"kraken": "https://zenodo.org/record/819363/files/kraken_bac_arc_v1.tar.gz", 
					"motus": "https://zenodo.org/record/819365/files/motus_bac_arc_v1.tar.gz",
					"metaphlan2": "https://zenodo.org/record/2668464/files/metaphlan2_bac_arc_v1.tar.gz"
				},
			   'fungi_viral_201709': {
			   		"clark": "https://zenodo.org/record/1044318/files/clark_fun-vir_refseq-cg_201709.tar.gz", 
			   		"dudes": "https://zenodo.org/record/1044328/files/dudes_fun-vir_refseq-cg_201709.tar.gz", 
			   		"kaiju": "https://zenodo.org/record/1044326/files/kaiju_fun-vir_refseq-cg_201709.tar.gz", 
			   		"kraken": "https://zenodo.org/record/1044330/files/kraken_fun-vir_refseq-cg_201709.tar.gz"
			   	}
}


# A pre-configured database name cannot be used as a key in the config.yaml file
for preconfigdb in preconfigdbs.keys():
	if preconfigdb in config:
		raise Exception("Database name " + preconfigdb + " is already taken for pre-configured databases and cannot be used to create custom databases")

# Set default values for parameters not set on config.yaml
for key,value in default_val.items():
	if key not in config:
		config[key] = value

# Add empty path for custom databases if it's not set on the config.yaml (
# This is necessary to set targets metametamerge rule and to allow to delete the custom database definition after building it
customdbs = {}
for db in config["databases"]:
	if db not in preconfigdbs:
		customdbs[db] = {}
		for tool in config["tools"]: # For all active tools
			if has_custom_db(tool):
				if db in config and tool in config[db]:
					customdbs[db][tool] = config[db][tool]
				else:
					customdbs[db][tool] = ""

# import pprint
# for k,v in sorted(config.items()):
# 	print(" - " + k + ": ", end='')
# 	pprint.pprint(v)
# print("preconfigdbs")	
# for k,v in sorted(preconfigdbs.items()):
# 	print(" - " + k + ": ", end='')
# 	pprint.pprint(v)
# print("customdbs")	
# for k,v in sorted(customdbs.items()):
# 	print(" - " + k + ": ", end='')
# 	pprint.pprint(v)
